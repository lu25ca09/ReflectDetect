Project: mybatis-3.5.11.jar
Classes containing reachable Reflections count: 81
Classes reaching reflection calls only transitively count: 199
Methods containing reachable Reflections count: 134
-----------------------------
Class: SecurityActions
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
ManipulateMetaObject which is Dynamic
LoadClass which is Dynamic
Methods of SecurityActions:

Method: disableWarning
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 11
at line 279
Feature Category: LoadClass which is Dynamic

Method: setAccessible
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 8
at line 159
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: SerializedProxy
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of SerializedProxy:

Method: readResolve
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 81
at line 90
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: ProxyFactory
reachable Reflect Calls: 7
Class reaches Reflection Calls directly
Direct Features: 
ManipulateObject which is Dynamic
AccessObject which is Dynamic
ConstructObject which is Dynamic
ManipulateMetaObject which is Dynamic
Methods of ProxyFactory:

Method: setField
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 28
at line 677
Feature Category: ManipulateObject which is Dynamic

Method: create
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 15
at line 830
Feature Category: ConstructObject which is Dynamic

Method: getHandler
Reachable Reflect Methods Count: 3
Reflect Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 14
at line 712
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 19
at line 713
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 25
at line 714
Feature Category: ManipulateMetaObject which is Dynamic

Method: getField
Reachable Reflect Methods Count: 3
Reflect Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 8
at line 692
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 13
at line 693
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 19
at line 694
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: SecurityActions$3
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
ManipulateMetaObject which is Dynamic
Methods of SecurityActions$3:

Method: run
Reachable Reflect Methods Count: 2
Reflect Features: 
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 18
at line 94
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 31
at line 96
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: SecurityActions$6
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ManipulateMetaObject which is Dynamic
Methods of SecurityActions$6:

Method: run
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 8
at line 163
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: SerializedProxy$1
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of SerializedProxy$1:

Method: run
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader) }
at PC = 13
at line 71
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: DefinePackageHelper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DefineClassHelper$JavaOther
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of DefineClassHelper$JavaOther:

Method: defineClass
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 81
at line 214
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: DefineClassHelper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SecurityActions$TheUnsafe
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of SecurityActions$TheUnsafe:

Method: call
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 11
at line 264
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: DefineClassHelper$Java9$ReferencedUnsafe
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of DefineClassHelper$Java9$ReferencedUnsafe:

Method: defineClass
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 18
at line 72
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: DefineClassHelper$Java9
reachable Reflect Calls: 5
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Methods of DefineClassHelper$Java9:

Method: defineClass
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 12
at line 142
Feature Category: InvokeMethod which is Dynamic

Method: getReferencedUnsafe
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 18
at line 118
Feature Category: InvokeMethod which is Dynamic

Method: <init>
Reachable Reflect Methods Count: 3
Reflect Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 17
at line 96
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 31
at line 102
Feature Category: LoadClass which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 64
at line 105
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: ProxyObjectInputStream
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of ProxyObjectInputStream:

Method: readClassDescriptor
Reachable Reflect Methods Count: 2
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 22
at line 71
Feature Category: LoadClass which is Dynamic

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 66
at line 76
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: RuntimeSupport$DefaultMethodHandler
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of RuntimeSupport$DefaultMethodHandler:

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 4
at line 42
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: FactoryHelper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SecurityActions$8
reachable Reflect Calls: 4
Class reaches Reflection Calls directly
Direct Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
LoadClass which is Dynamic
Methods of SecurityActions$8:

Method: run
Reachable Reflect Methods Count: 4
Reflect Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 2
at line 200
Feature Category: LoadClass which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 15
at line 202
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 33
at line 203
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 42
at line 204
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: DefinePackageHelper$JavaOther
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
Methods of DefinePackageHelper$JavaOther:

Method: definePackage
Reachable Reflect Methods Count: 2
Reflect Features: 
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 27
at line 118
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 80
at line 119
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: DefineClassHelper$Java11
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: HotSwapper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ObjectImporter
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
LoadClass which is Dynamic
Methods of ObjectImporter:

Method: createProxy
Reachable Reflect Methods Count: 2
Reflect Features: 
ConstructObject which is Dynamic
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 1
at line 199
Feature Category: LoadClass which is Dynamic

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 31
at line 201
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: ClassPool
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CtMethod
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CtClass
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: StubGenerator
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Metaobject
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
ManipulateObject which is Dynamic
AccessObject which is Dynamic
InvokeMethod which is Dynamic
Methods of Metaobject:

Method: trapFieldRead
Reachable Reflect Methods Count: 1
Reflect Features: 
AccessObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 17
at line 165
Feature Category: AccessObject which is Dynamic

Method: trapMethodcall
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 11
at line 232
Feature Category: InvokeMethod which is Dynamic

Method: trapFieldWrite
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 18
at line 185
Feature Category: ManipulateObject which is Dynamic
-----------------------------
Class: ClassMetaobject
reachable Reflect Calls: 7
Class reaches Reflection Calls directly
Direct Features: 
ManipulateObject which is Dynamic
AccessObject which is Dynamic
ConstructObject which is Dynamic
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Methods of ClassMetaobject:

Method: getClassObject
Reachable Reflect Methods Count: 2
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 13
at line 105
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 18
at line 106
Feature Category: LoadClass which is Dynamic

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 64
at line 215
Feature Category: InvokeMethod which is Dynamic

Method: trapMethodcall
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 10
at line 239
Feature Category: InvokeMethod which is Dynamic

Method: newInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 20
at line 141
Feature Category: ConstructObject which is Dynamic

Method: trapFieldWrite
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 12
at line 190
Feature Category: ManipulateObject which is Dynamic

Method: trapFieldRead
Reachable Reflect Methods Count: 1
Reflect Features: 
AccessObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 11
at line 170
Feature Category: AccessObject which is Dynamic
-----------------------------
Class: AppletServer
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of AppletServer:

Method: processRMI
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 66
at line 169
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: CodeConverter
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Reflection
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Viewer
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Methods of Viewer:

Method: run
Reachable Reflect Methods Count: 2
Reflect Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 2
at line 102
Feature Category: LoadClass which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 30
at line 105
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: Loader
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Methods of Loader:

Method: run
Reachable Reflect Methods Count: 2
Reflect Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 2
at line 326
Feature Category: LoadClass which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 30
at line 328
Feature Category: InvokeMethod which is Dynamic

Method: delegateToParent
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 11
at line 474
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: FramePrinter
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Dump
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ClassFile
reachable Reflect Calls: 6
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of ClassFile:

Method: <clinit>
Reachable Reflect Methods Count: 6
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 6
at line 162
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 16
at line 164
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader) }
at PC = 30
at line 166
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 40
at line 168
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 50
at line 170
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 82
at line 174
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: ConstPool
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ClassFilePrinter
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Callback
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CtBehavior
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SoftValueHashMap
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ScopedClassPoolRepositoryImpl
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ScopedClassPool
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CtField
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Desc
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of Desc:

Method: getClassObject
Reachable Reflect Methods Count: 2
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader) }
at PC = 29
at line 71
Feature Category: LoadClass which is Dynamic

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 34
at line 72
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: CtConstructor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Expr
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CodeIterator
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MethodInfo
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: NewExpr
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: NewArray
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Javac
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CodeAttribute
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JvstCodeGen
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MethodCall
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Instanceof
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JvstTypeChecker
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ExceptionTable
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Handler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: FieldAccess
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ExprEditor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Cast
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Transformer
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TransformNew
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: AttributeInfo
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Frame
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TransformAccessArrayField
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CallExpr
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MemberResolver
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TypeChecker
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Analyzer
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Type
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CodeGen
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MemberCodeGen
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Javac$2
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Javac$1
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: AccessorMaker
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BasicBlock$Maker
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TypeData$TypeVar
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: FieldInfo
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapMaker
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MemberValue
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of MemberValue:

Method: loadClass
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader) }
at PC = 6
at line 56
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: AnnotationMemberValue
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ArrayMemberValue
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of ArrayMemberValue:

Method: getValue
Reachable Reflect Methods Count: 2
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 114
at line 75
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 146
at line 77
Feature Category: Array which is Dynamic

Method: getType
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 26
at line 87
Feature Category: Array which is Dynamic
-----------------------------
Class: EnumMemberValue
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
AccessObject which is Dynamic
Methods of EnumMemberValue:

Method: getValue
Reachable Reflect Methods Count: 1
Reflect Features: 
AccessObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 13
at line 65
Feature Category: AccessObject which is Dynamic
-----------------------------
Class: ClassMemberValue
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Annotation
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: AnnotationImpl
reachable Reflect Calls: 6
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Proxy which is Dynamic
Methods of AnnotationImpl:

Method: <clinit>
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 6
at line 51
Feature Category: LoadClass which is Dynamic

Method: checkEquals
Reachable Reflect Methods Count: 3
Reflect Features: 
InvokeMethod which is Dynamic
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object) }
at PC = 14
at line 243
Feature Category: Proxy which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 50
at line 250
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 164
at line 267
Feature Category: InvokeMethod which is Dynamic

Method: getAnnotationType
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 21
at line 102
Feature Category: LoadClass which is Dynamic

Method: make
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 23
at line 74
Feature Category: Proxy which is Dynamic
-----------------------------
Class: MultiType
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SubroutineScanner
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: InstructionPrinter
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: NameAndTypeInfo
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MethodTypeInfo
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CodeIterator$Pointers
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ClassInfo
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ClassPoolTail
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JarClassPath
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JarDirClassPath
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CtNewWrappedMethod
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CtClassType
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SimpleNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTSelectFirst
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ObjectPropertyAccessor
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of ObjectPropertyAccessor:

Method: setPossibleProperty
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 78
at line 108
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: ArrayPropertyAccessor
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of ArrayPropertyAccessor:

Method: setProperty
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 82
at line 121
Feature Category: Array which is Dynamic

Method: getProperty
Reachable Reflect Methods Count: 2
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 113
at line 71
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 231
at line 91
Feature Category: Array which is Dynamic
-----------------------------
Class: OgnlParser
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTProperty
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: OgnlContext
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: OgnlRuntime
reachable Reflect Calls: 15
Class reaches Reflection Calls directly
Direct Features: 
ManipulateObject which is Dynamic
AccessObject which is Dynamic
Array which is Dynamic
ConstructObject which is Dynamic
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Proxy which is Dynamic
Methods of OgnlRuntime:

Method: setFieldValue
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 100
at line 2502
Feature Category: ManipulateObject which is Dynamic

Method: findParameterTypes
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 344
at line 983
Feature Category: Array which is Dynamic

Method: callAppropriateMethod
Reachable Reflect Methods Count: 2
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 346
at line 1939
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 373
at line 1941
Feature Category: Array which is Dynamic

Method: getUniqueDescriptor
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object) }
at PC = 47
at line 834
Feature Category: Proxy which is Dynamic

Method: callConstructor
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 203
at line 2069
Feature Category: ConstructObject which is Dynamic

Method: getFieldValue
Reachable Reflect Methods Count: 1
Reflect Features: 
AccessObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 101
at line 2471
Feature Category: AccessObject which is Dynamic

Method: invokeMethodInsideSandbox
Reachable Reflect Methods Count: 6
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 9
at line 1240
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 24
at line 1245
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 132
at line 1266
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 163
at line 1272
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 207
at line 1285
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 295
at line 1285
Feature Category: InvokeMethod which is Dynamic

Method: <clinit>
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 761
at line 385
Feature Category: LoadClass which is Dynamic

Method: getStaticField
Reachable Reflect Methods Count: 1
Reflect Features: 
AccessObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 198
at line 2586
Feature Category: AccessObject which is Dynamic
-----------------------------
Class: OgnlOps
reachable Reflect Calls: 12
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of OgnlOps:

Method: isEqual
Reachable Reflect Methods Count: 2
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 92
at line 141
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 97
at line 141
Feature Category: Array which is Dynamic

Method: toArray
Reachable Reflect Methods Count: 6
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 72
at line 546
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 89
at line 548
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 103
at line 549
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 114
at line 554
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 140
at line 556
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 147
at line 556
Feature Category: Array which is Dynamic

Method: convertValue
Reachable Reflect Methods Count: 4
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 52
at line 577
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 78
at line 579
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 86
at line 579
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 117
at line 583
Feature Category: Array which is Dynamic
-----------------------------
Class: ASTStaticMethod
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ExpressionCompiler
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of ExpressionCompiler:

Method: compileExpression
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public java.lang.Object newInstance() }
at PC = 378
at line 467
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: ExpressionNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTBitNegate
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTChain
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of ASTChain:

Method: getValueBody
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 198
at line 105
Feature Category: Array which is Dynamic
-----------------------------
Class: ASTList
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTCtor
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of ASTCtor:

Method: getValueBody
Reachable Reflect Methods Count: 3
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 130
at line 104
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 195
at line 112
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 219
at line 114
Feature Category: Array which is Dynamic
-----------------------------
Class: ASTMethod
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTSequence
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapPropertyAccessor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BooleanExpression
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTNot
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: IteratorEnumeration
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DefaultClassResolver
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of DefaultClassResolver:

Method: toClassForName
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 1
at line 78
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: ASTAssign
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: IntHashMap
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTVarRef
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ArrayElementsAccessor$1
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of ArrayElementsAccessor$1:

Method: nextElement
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 15
at line 56
Feature Category: Array which is Dynamic
-----------------------------
Class: ASTOr
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: AccessibleObjectHandlerJDK9Plus
reachable Reflect Calls: 8
Class reaches Reflection Calls directly
Direct Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Methods of AccessibleObjectHandlerJDK9Plus:

Method: setAccessible
Reachable Reflect Methods Count: 2
Reflect Features: 
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 54
at line 233
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 71
at line 241
Feature Category: ManipulateMetaObject which is Dynamic

Method: determineAccessibleObjectOverrideFieldOffset
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 38
at line 191
Feature Category: InvokeMethod which is Dynamic

Method: instantiateClazzUnsafe
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 2
at line 79
Feature Category: LoadClass which is Dynamic

Method: instantiateUnsafeInstance
Reachable Reflect Methods Count: 4
Reflect Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 15
at line 100
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 20
at line 101
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 30
at line 107
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 49
at line 107
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: ListPropertyAccessor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTAnd
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTMap
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
LoadClass which is Dynamic
Methods of ASTMap:

Method: <clinit>
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 2
at line 51
Feature Category: LoadClass which is Dynamic

Method: getValueBody
Reachable Reflect Methods Count: 2
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public java.lang.Object newInstance() }
at PC = 10
at line 79
Feature Category: ConstructObject which is Dynamic

Call of java.lang.Class{ public java.lang.Object newInstance() }
at PC = 69
at line 87
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: ASTInstanceof
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Ognl
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SetPropertyAccessor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: EnumerationPropertyAccessor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTSelect
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: AccessibleObjectHandlerPreJDK9
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ManipulateMetaObject which is Dynamic
Methods of AccessibleObjectHandlerPreJDK9:

Method: setAccessible
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 2
at line 58
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: EnumerationIterator
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: OgnlSecurityManagerFactory
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of OgnlSecurityManagerFactory:

Method: build
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 24
at line 58
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: UserMethod
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of UserMethod:

Method: run
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 12
at line 24
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: ASTAdd
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: IteratorPropertyAccessor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTProject
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTNegate
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ASTSelectLast
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Configuration
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TypeAliasRegistry
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TypeHandlerRegistry
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of TypeHandlerRegistry:

Method: getInstance
Reachable Reflect Methods Count: 2
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 28
at line 446
Feature Category: ConstructObject which is Dynamic

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 83
at line 455
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: ResolverUtil
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of ResolverUtil:

Method: addIfMatching
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 80
at line 290
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: LogFactory
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of LogFactory:

Method: setImplementation
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 27
at line 107
Feature Category: ConstructObject which is Dynamic

Method: getLog
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 11
at line 52
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: DefaultSqlSession
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SqlSessionManager
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Proxy which is Dynamic
Methods of SqlSessionManager:

Method: <init>
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 43
at line 44
Feature Category: Proxy which is Dynamic
-----------------------------
Class: SqlSessionManager$SqlSessionInterceptor
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of SqlSessionManager$SqlSessionInterceptor:

Method: invoke
Reachable Reflect Methods Count: 2
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 24
at line 350
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 49
at line 357
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: DefaultMapResultHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: XMLConfigBuilder
reachable Reflect Calls: 4
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of XMLConfigBuilder:

Method: dataSourceElement
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 33
at line 332
Feature Category: ConstructObject which is Dynamic

Method: pluginElement
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 65
at line 189
Feature Category: ConstructObject which is Dynamic

Method: databaseIdProviderElement
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 50
at line 307
Feature Category: ConstructObject which is Dynamic

Method: objectWrapperFactoryElement
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 28
at line 209
Feature Category: ConstructObject which is Dynamic

Method: reflectorFactoryElement
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 28
at line 217
Feature Category: ConstructObject which is Dynamic

Method: objectFactoryElement
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 33
at line 200
Feature Category: ConstructObject which is Dynamic

Method: transactionManagerElement
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 33
at line 321
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: MappedStatement
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: XMLScriptBuilder
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: XNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapperRegistry
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: InterceptorChain
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: LanguageDriverRegistry
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of LanguageDriverRegistry:

Method: lambda$register$0
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 12
at line 38
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: MixedSqlNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TrimSqlNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BaseBuilder
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of BaseBuilder:

Method: createInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 24
at line 105
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: XMLScriptBuilder$ChooseHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DefaultReflectorFactory
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DefaultObjectFactory
reachable Reflect Calls: 6
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
ManipulateMetaObject which is Dynamic
Methods of DefaultObjectFactory:

Method: instantiateClass
Reachable Reflect Methods Count: 6
Reflect Features: 
ConstructObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 24
at line 62
Feature Category: ConstructObject which is Dynamic

Call of java.lang.reflect.Constructor{ public void setAccessible(boolean) }
at PC = 39
at line 65
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 48
at line 66
Feature Category: ConstructObject which is Dynamic

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 86
at line 74
Feature Category: ConstructObject which is Dynamic

Call of java.lang.reflect.Constructor{ public void setAccessible(boolean) }
at PC = 101
at line 77
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 116
at line 78
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: DynamicSqlSource
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JavassistProxyFactory
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: RawSqlSource
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: IfSqlNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ForEachSqlNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ChooseSqlNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: XMLLanguageDriver
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TextSqlNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: OgnlCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BoundSql
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: StaticTextSqlNode
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TrimSqlNode$FilteredDynamicContext
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: XPathParser
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ParamNameResolver
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TextSqlNode$BindingTokenParser
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapperMethod
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of MapperMethod:

Method: convertToArray
Reachable Reflect Methods Count: 2
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 18
at line 182
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 54
at line 185
Feature Category: Array which is Dynamic
-----------------------------
Class: OgnlMemberAccess
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ManipulateMetaObject which is Dynamic
Methods of OgnlMemberAccess:

Method: setup
Reachable Reflect Methods Count: 1
Reflect Features: 
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 37
at line 52
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: ExpressionEvaluator
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of ExpressionEvaluator:

Method: evaluateIterable
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object get(java.lang.Object,int) }
at PC = 105
at line 72
Feature Category: Array which is Dynamic
-----------------------------
Class: ForEachSqlNode$PrefixedContext
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ForEachSqlNode$FilteredDynamicContext
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DynamicContext$ContextAccessor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SqlSourceBuilder
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: GenericTokenParser
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: PropertyParser
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Reflector
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of Reflector:

Method: typeToClass
Reachable Reflect Methods Count: 2
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 69
at line 226
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 89
at line 229
Feature Category: Array which is Dynamic
-----------------------------
Class: MetaObject
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: RawLanguageDriver
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BaseWrapper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapWrapper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MetaClass
reachable Reflect Calls: 4
Class reaches Reflection Calls directly
Direct Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Methods of MetaClass:

Method: getGenericGetterType
Reachable Reflect Methods Count: 4
Reflect Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 26
at line 120
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 31
at line 121
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 69
at line 125
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 74
at line 126
Feature Category: AccessObject which is Dynamic
-----------------------------
Class: BeanWrapper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: PropertyCopier
reachable Reflect Calls: 5
Class reaches Reflection Calls directly
Direct Features: 
ManipulateObject which is Dynamic
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Methods of PropertyCopier:

Method: copyBeanProperties
Reachable Reflect Methods Count: 5
Reflect Features: 
ManipulateObject which is Dynamic
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 44
at line 38
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 47
at line 38
Feature Category: ManipulateObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 64
at line 41
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 73
at line 42
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 76
at line 42
Feature Category: ManipulateObject which is Dynamic
-----------------------------
Class: MethodInvoker
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
Methods of MethodInvoker:

Method: invoke
Reachable Reflect Methods Count: 3
Reflect Features: 
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 6
at line 44
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 22
at line 47
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 31
at line 48
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: GetFieldInvoker
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Methods of GetFieldInvoker:

Method: invoke
Reachable Reflect Methods Count: 3
Reflect Features: 
AccessObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 5
at line 35
Feature Category: AccessObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 21
at line 38
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public java.lang.Object get(java.lang.Object) }
at PC = 29
at line 39
Feature Category: AccessObject which is Dynamic
-----------------------------
Class: SetFieldInvoker
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
ManipulateObject which is Dynamic
ManipulateMetaObject which is Dynamic
Methods of SetFieldInvoker:

Method: invoke
Reachable Reflect Methods Count: 3
Reflect Features: 
ManipulateObject which is Dynamic
ManipulateMetaObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 8
at line 35
Feature Category: ManipulateObject which is Dynamic

Call of java.lang.reflect.Field{ public void setAccessible(boolean) }
at PC = 26
at line 38
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Field{ public void set(java.lang.Object,java.lang.Object) }
at PC = 37
at line 39
Feature Category: ManipulateObject which is Dynamic
-----------------------------
Class: TypeParameterResolver
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of TypeParameterResolver:

Method: resolveGenericArrayType
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 84
at line 109
Feature Category: Array which is Dynamic
-----------------------------
Class: ArrayUtil
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Plugin
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Proxy which is Dynamic
Methods of Plugin:

Method: wrap
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 39
at line 49
Feature Category: Proxy which is Dynamic

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 63
at line 64
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: Invocation
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of Invocation:

Method: proceed
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 12
at line 49
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: VendorDatabaseIdProvider
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ResultMap$Builder
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MappedStatement$Builder
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Jdbc3KeyGenerator
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JndiDataSourceFactory
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: UnpooledDataSourceFactory
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: PerpetualCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: FifoCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: LruCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SoftCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: WeakCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CglibProxyFactory
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CacheBuilder
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of CacheBuilder:

Method: newCacheDecoratorInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 15
at line 210
Feature Category: ConstructObject which is Dynamic

Method: newBaseCacheInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 15
at line 192
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: VFS
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Methods of VFS:

Method: getClass
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.ClassLoader{ public java.lang.Class loadClass(java.lang.String) }
at PC = 7
at line 112
Feature Category: LoadClass which is Dynamic

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 3
at line 169
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: LoggingCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ScheduledCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SerializedCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SynchronizedCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BlockingCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BaseJdbcLogger
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: StatementLogger
reachable Reflect Calls: 6
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Proxy which is Dynamic
Methods of StatementLogger:

Method: newInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 30
at line 84
Feature Category: Proxy which is Dynamic

Method: invoke
Reachable Reflect Methods Count: 5
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 15
at line 47
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 92
at line 54
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 129
at line 57
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 151
at line 60
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 188
at line 63
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: PreparedStatementLogger
reachable Reflect Calls: 8
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Proxy which is Dynamic
Methods of PreparedStatementLogger:

Method: invoke
Reachable Reflect Methods Count: 7
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 15
at line 48
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 90
at line 56
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 127
at line 59
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 185
at line 67
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 207
at line 69
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 256
at line 72
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 310
at line 78
Feature Category: InvokeMethod which is Dynamic

Method: newInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 35
at line 96
Feature Category: Proxy which is Dynamic
-----------------------------
Class: ResultSetLogger
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Proxy which is Dynamic
Methods of ResultSetLogger:

Method: newInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 30
at line 135
Feature Category: Proxy which is Dynamic

Method: invoke
Reachable Reflect Methods Count: 2
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 15
at line 67
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 25
at line 69
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: ConnectionLogger
reachable Reflect Calls: 5
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Proxy which is Dynamic
Methods of ConnectionLogger:

Method: invoke
Reachable Reflect Methods Count: 4
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 15
at line 49
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 89
at line 55
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 133
at line 59
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 165
at line 63
Feature Category: InvokeMethod which is Dynamic

Method: newInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 30
at line 84
Feature Category: Proxy which is Dynamic
-----------------------------
Class: SqlRunner
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DefaultResultSetHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: RoutingStatementHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BatchExecutor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ReuseExecutor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CachingExecutor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: VFS$VFSHolder
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
Methods of VFS$VFSHolder:

Method: createVFS
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 69
at line 62
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: SerialFilterChecker
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Methods of SerialFilterChecker:

Method: <clinit>
Reachable Reflect Methods Count: 2
Reflect Features: 
InvokeMethod which is Dynamic
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String) }
at PC = 14
at line 33
Feature Category: LoadClass which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 33
at line 34
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: ClassLoaderWrapper
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
LoadClass which is Dynamic
Methods of ClassLoaderWrapper:

Method: classForName
Reachable Reflect Methods Count: 1
Reflect Features: 
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader) }
at PC = 32
at line 186
Feature Category: LoadClass which is Dynamic
-----------------------------
Class: XMLStatementBuilder
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JBoss6VFS
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JBoss6VFS$VirtualFile
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DefaultVFS
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BaseStatementHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SimpleStatementHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: SelectKeyGenerator
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: PreparedStatementHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CallableStatementHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ResultSetWrapper
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JavassistProxyFactory$EnhancedResultObjectProxyImpl
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of JavassistProxyFactory$EnhancedResultObjectProxyImpl:

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 268
at line 157
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: ResultLoaderMap
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: AbstractEnhancedDeserializationProxy
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: JavassistProxyFactory$EnhancedDeserializationProxyImpl
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Methods of JavassistProxyFactory$EnhancedDeserializationProxyImpl:

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 28
at line 183
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: ResultLoaderMap$LoadPair
reachable Reflect Calls: 6
Class reaches Reflection Calls directly
Direct Features: 
Casts which is Dynamic
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
Methods of ResultLoaderMap$LoadPair:

Method: getConfiguration
Reachable Reflect Methods Count: 2
Reflect Features: 
Casts which is Dynamic
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 112
at line 246
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.Class{ public java.lang.Object cast(java.lang.Object) }
at PC = 352
at line 271
Feature Category: Casts which is Dynamic

Method: lambda$getConfiguration$0
Reachable Reflect Methods Count: 4
Reflect Features: 
ManipulateMetaObject which is Dynamic
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 2
at line 239
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 11
at line 240
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 17
at line 242
Feature Category: ManipulateMetaObject which is Dynamic

Call of java.lang.reflect.Method{ public void setAccessible(boolean) }
at PC = 25
at line 242
Feature Category: ManipulateMetaObject which is Dynamic
-----------------------------
Class: CglibProxyFactory$EnhancedResultObjectProxyImpl
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CglibProxyFactory$EnhancedDeserializationProxyImpl
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BaseExecutor
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ResultLoader
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: CacheKey
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: ResultExtractor
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of ResultExtractor:

Method: extractObjectFromList
Reachable Reflect Methods Count: 2
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 94
at line 47
Feature Category: Array which is Dynamic

Call of java.lang.reflect.Array{ public static void set(java.lang.Object,int,java.lang.Object) }
at PC = 133
at line 50
Feature Category: Array which is Dynamic
-----------------------------
Class: Jdbc3KeyGenerator$KeyAssigner
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: TransactionalCacheManager
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: BaseExecutor$DeferredLoad
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: UnpooledDataSource
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
LoadClass which is Dynamic
Methods of UnpooledDataSource:

Method: initializeDriver
Reachable Reflect Methods Count: 2
Reflect Features: 
ConstructObject which is Dynamic
LoadClass which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.Class{ public static java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader) }
at PC = 31
at line 234
Feature Category: LoadClass which is Dynamic

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 58
at line 240
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: PooledDataSource
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Proxy which is Dynamic
Methods of PooledDataSource:

Method: unwrapConnection
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object) }
at PC = 11
at line 607
Feature Category: Proxy which is Dynamic
-----------------------------
Class: PooledConnection
reachable Reflect Calls: 2
Class reaches Reflection Calls directly
Direct Features: 
InvokeMethod which is Dynamic
Proxy which is Dynamic
Methods of PooledConnection:

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 48
at line 255
Feature Category: InvokeMethod which is Dynamic

Method: <init>
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 51
at line 59
Feature Category: Proxy which is Dynamic
-----------------------------
Class: TransactionalCache
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapperBuilderAssistant
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: XMLIncludeTransformer
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: XMLMapperBuilder
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapperAnnotationBuilder
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Array which is Dynamic
Methods of MapperAnnotationBuilder:

Method: getReturnType
Reachable Reflect Methods Count: 1
Reflect Features: 
Array which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Array{ public static java.lang.Object newInstance(java.lang.Class,int) }
at PC = 217
at line 440
Feature Category: Array which is Dynamic
-----------------------------
Class: ProviderSqlSource
reachable Reflect Calls: 6
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
InvokeMethod which is Dynamic
Methods of ProviderSqlSource:

Method: getProviderType
Reachable Reflect Methods Count: 2
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 21
at line 240
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 50
at line 241
Feature Category: InvokeMethod which is Dynamic

Method: invokeProviderMethod
Reachable Reflect Methods Count: 2
Reflect Features: 
ConstructObject which is Dynamic
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 30
at line 232
Feature Category: ConstructObject which is Dynamic

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 40
at line 234
Feature Category: InvokeMethod which is Dynamic

Method: <init>
Reachable Reflect Methods Count: 2
Reflect Features: 
ConstructObject which is Dynamic
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 95
at line 104
Feature Category: InvokeMethod which is Dynamic

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 138
at line 107
Feature Category: ConstructObject which is Dynamic
-----------------------------
Class: SqlSourceBuilder$ParameterMappingTokenHandler
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MapperProxyFactory
reachable Reflect Calls: 1
Class reaches Reflection Calls directly
Direct Features: 
Proxy which is Dynamic
Methods of MapperProxyFactory:

Method: newInstance
Reachable Reflect Methods Count: 1
Reflect Features: 
Proxy which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Proxy{ public static java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) }
at PC = 19
at line 48
Feature Category: Proxy which is Dynamic
-----------------------------
Class: MapperProxy
reachable Reflect Calls: 3
Class reaches Reflection Calls directly
Direct Features: 
ConstructObject which is Dynamic
InvokeMethod which is Dynamic
Methods of MapperProxy:

Method: invoke
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 15
at line 84
Feature Category: InvokeMethod which is Dynamic

Method: getMethodHandleJava8
Reachable Reflect Methods Count: 1
Reflect Features: 
ConstructObject which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Constructor{ public java.lang.Object newInstance(java.lang.Object[]) }
at PC = 24
at line 128
Feature Category: ConstructObject which is Dynamic

Method: getMethodHandleJava9
Reachable Reflect Methods Count: 1
Reflect Features: 
InvokeMethod which is Dynamic
Reachable Reflect Methods: 

Call of java.lang.reflect.Method{ public java.lang.Object invoke(java.lang.Object,java.lang.Object[]) }
at PC = 23
at line 120
Feature Category: InvokeMethod which is Dynamic
-----------------------------
Class: MapperMethod$MethodSignature
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: LanguageDriverRegistry$register(Ljava$lang$Class:)V:20$Lambda
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: MixedSqlNode$apply(Lorg$apache$ibatis$scripting$xmltags$DynamicContext:)Z:5$Lambda
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DynamicSqlSource$getBoundSql(Ljava$lang$Object:)Lorg$apache$ibatis$mapping$BoundSql::88$Lambda
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: Jdbc3KeyGenerator$assignKeysToParam(Lorg$apache$ibatis$session$Configuration:Ljava$sql$ResultSet:Ljava$sql$ResultSetMetaData:]Ljava$lang$String:Ljava$lang$Object:)V:144$Lambda
reachable Reflect Calls: 0
Class only reaches reflection calls transitively
-----------------------------
Class: DefaultReflectorFactory$findForClass(Ljava$lang$Class:)Lorg$apache$ibatis$reflection$Reflector::12$Lambda
reachable Reflect Calls: 0
Class only reaches reflection calls transitively